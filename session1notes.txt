introduced scenario
L3tm3!n - user login for client pc

introduced mitre att&ack framework
enterprise matrix

reconnaissance:
did some basic recon
(user) what rights/tools do we have already?
(system) - ip addresses of other systems, what shares do we have access to?

talked about sysvol, but it is removed from the lab this time
just included for interest
\\win2019dc\sysvol groups.xml cpassword
gp3finder

get name of DC
echo %logonserver%
\\win2019dc

whoami
adlab\normaluser

privilege escalation:

scheduled task
c:\windows\Tasks Migrated (readable task configurations, only present on machines which have undergone a certain upgrade)

create new .bat file
create new user
put new user in administrators group

don't log in as this new user, we will use it in other ways later
don't put your existing user in the local admin group - this is more likely to be centrally monitored

how to create a new user and put it in the admin group in one line (command 1 && command 2)

syntax: net user <username> <password> /add && net localgroup administrators <username> /add

example: net user helpdesk L3tm3!n /add && net localgroup administrators <username> /add - use an innocent looking username and use the password you already know works in the domain

net user 
net localgroup administrators

remotemouse cve 2021-35448
local privilege escalation to system
exploitdb.com

services 
look for missing description (gives a clue that service might be worth targeting)
look for services running as a named user account - this is atypical

creating fake services - don't worry about the timeout message, your fake service can still run, even if it is not sending a response back to the service control mananager.

* regsvc - weak registry permissions -  you can edit imagepath (either point to an exe you control or directly inject code)

* file permissions service - (not working, install image not the same on all machines - skipped for now)

* unquoted service path - look out for 2 things
1 " " - no quotes around the path
2 spaces in the path

windows builds up the path piece by piece - each time it finds a space it considers this a terminator
c:\program files\unquoted service path service\common files\

in the above, windows will first try to find c:\program.exe before moving on to try c:\program files\unquoted.exe (it is not usually possible to exploit this, as the program files directory is owned by trusted installer and highly secured).
Windows will eventually try c:\program files\unquoted service path service\common.exe - we can make our own common.exe and put it in this location.







